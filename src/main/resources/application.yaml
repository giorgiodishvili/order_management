spring:
  application:
    name: order_management
  datasource:
    url: ${JDBC_URL:jdbc:postgresql://localhost:5432/test}
    username: ${DB_USERNAME:myuser}
    password: ${DB_PASSWORD:mypassword}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
  flyway:
    enabled: true
    locations: classpath:/db/migration
    schemas: sale
  cache:
    type: hazelcast

  kafka:
    bootstrap-servers: PLAINTEXT://localhost:9092
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

  cloud:
    function:
      definition: userUpdatedEventConsumer
    stream:
      kafka:
        binder:
          brokers: ${spring.kafka.bootstrap-servers}
      bindings:
        userUpdatedEventConsumer-in-0:
          destination: user-updated-event
          group: order-management-group
#          content-type: application/json


userController:
  name: "userController"
  url: http://localhost:8080

server:
  port: 8085

hazelcast:
  network:
    address: ${HAZELCAST_URL:localhost:5701}
