spring:
  application:
    name: order_management
  datasource:
    url: ${JDBC_URL:jdbc:postgresql://localhost:5432/test}
    username: ${DB_USERNAME:myuser}
    password: ${DB_PASSWORD:mypassword}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
  flyway:
    enabled: true
    locations: classpath:/db/migration
    schemas: sale
  cache:
    type: hazelcast

  kafka:
    bootstrap-servers: http://localhost:9092

  cloud:
    function:
      definition: userUpdatedEventConsumer
    stream:
      function:
        bindings:
          userUpdatedEventConsumer-in-0: user-updated

      kafka:
        binder:
          brokers: ${spring.kafka.bootstrap-servers}
        bindings:
          user-updated:
            consumer:
              start-offset: earliest
      bindings:
        user-updated:
          consumer:
            concurrency: 1
          destination: user-updated-event
          group: order-management-group
#          content-type: application/json

authenticationController:
  name: "authenticationController"
  url: ${USER_SERVICE_URL:http://localhost:8080}

server:
  port: 8085

hazelcast:
  network:
    address: ${HAZELCAST_URL:localhost:5701}

logging:
  level:
    org.springframework.web.servlet.DispatcherServlet: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]"

management:
  tracing:
    sampling:
      probability: 1.0
